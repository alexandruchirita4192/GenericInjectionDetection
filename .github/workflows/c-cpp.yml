name: C/C++ CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Build on Linux
      run: make
    - name: Archive built files
      run: tar -czvf linux-build.tar.gz injection_detector
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: linux-build
        path: linux-build.tar.gz

  build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    - name: Build on Windows
      run: make
    - name: Archive built files
      run: tar -czvf windows-build.tar.gz injection_detector*
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: windows-build
        path: windows-build.tar.gz

  release:
    runs-on: ubuntu-latest
    needs: [build-linux, build-windows]
    steps:
    - uses: actions/checkout@v4
    - name: Download build artifacts (Linux)
      uses: actions/download-artifact@v3
      with:
        name: linux-build
        path: ./release-assets
    - name: Download build artifacts (Windows)
      uses: actions/download-artifact@v3
      with:
        name: windows-build
        path: ./release-assets
    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.sha }}
        release_name: "Release ${{ github.sha }}"
        draft: false
        prerelease: false
    - name: Upload Linux build to Release
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./release-assets/linux-build.tar.gz
        asset_name: linux-build.tar.gz
        asset_content_type: application/gzip
    - name: Upload Windows build to Release
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./release-assets/windows-build.tar.gz
        asset_name: windows-build.tar.gz
        asset_content_type: application/gzip
